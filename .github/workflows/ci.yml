name: Continuous Integration
on: [push, pull_request]
jobs:
  build:
    name: Build ${{matrix.os}}/${{matrix.build-type}}
    runs-on: ${{matrix.os}}-latest
    env:
      CODE_SIGNING_PFX_BASE64: ${{secrets.CODE_SIGNING_PFX_BASE64}}
    steps:
      - name: Fetch code-signing key
        if: matrix.os == 'windows' && env.CODE_SIGNING_PFX_BASE64 != ''
        run: '[System.Convert]::FromBase64String($Env:CODE_SIGNING_PFX_BASE64) | Set-Content ${{runner.temp}}/MyCert.pfx -AsByteStream'
      - uses: actions/checkout@v2
        with:
          path: source
      - name: Make build directory
        run: cmake -E make_directory build
      - name: Configure
        working-directory: build
        shell: pwsh
        run: |
          cmake ${{github.workspace}}\source `
            -DCMAKE_BUILD_TYPE=${{matrix.build-type}} `
            "-DCMAKE_INSTALL_PREFIX=${{github.workspace}}/com.fredemmott.audiooutputswitch.sdPlugin" `
            "-DSIGNTOOL_KEY_FILE=${{runner.temp}}/MyCert.pfx"
      - name: Compile
        working-directory: build
        run: cmake --build . --config ${{matrix.build-type}} --parallel
      - name: Install
        working-directory: build
        run: cmake --install . --config ${{matrix.build-type}}
    strategy:
      matrix:
        os: [windows, macos]
